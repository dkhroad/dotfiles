# Setting the prefix from C-b to C-a
set -g prefix C-a

# Free the original Ctrl-b prefix keybinding
unbind C-b

#setting the delay between prefix and command
set -s escape-time 1

# Ensure that we can send Ctrl-A to other apps
bind C-a send-prefix

# Set the base index for windows to 1 instead of 0
set -g base-index 1

# Set the base index for panes to 1 instead of 0
setw -g pane-base-index 1

# Reload the file with Prefix r
bind r source-file ~/.tmux.conf \; display "Reloaded!" 

# scrollback buffer size increase
set -g history-limit 500000

# Use system clipboard
set -g default-command "reattach-to-user-namespace -l zsh"  

# splitting panes
bind \ split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

#creating new windows
bind c new-window -c "#{pane_current_path}"

#start window and pane numbering from 1
set -g base-index 1
set -g renumber-windows on

bind b break-pane -d
bind C-b send-keys 'tat && exit' 'C-m'
bind C-j choose-tree
bind K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#$")" || tmux kill-session'

#prompted join pane
bind-key a command-prompt -p "join pane from: " "join-pane -v -s '%%'"
bind-key s display-panes\; command-prompt -p "pane #: " "swap-pane -t '%%'"


bind-key t split-window -h "htop"

# moving between panes
bind h select-pane -L 
bind j select-pane -D 
bind k select-pane -U
bind l select-pane -R

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"


# Quick pane selection
bind -r C-h select-window -t :- 
bind -r C-l select-window -t :+

# Pane resizing, course adjustments
bind -n S-Left resize-pane -L 10 
bind -n S-Down resize-pane -D 5 
bind -n S-Up resize-pane -U 5 
bind -n S-Right resize-pane -R 10 

# Pane resizing, finer adjustments
# bind -n S-Left resize-pane -L 2 
# bind -n S-Down resize-pane -D 1 
# bind -n S-Up resize-pane -U 1 
# bind -n S-Right resize-pane -R 2 
#
# mouse support - set to on if you want to use the mouse
setw -g mode-mouse on
set -g mouse-select-pane on 
set -g mouse-resize-pane on 
set -g mouse-select-window on

# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color"

# enable activity alerts
setw -g monitor-activity on 
set -g visual-activity on

# set the status line's colors
set -g status-fg white 
set -g status-bg black

# set the color of the window list
setw -g window-status-fg cyan 
setw -g window-status-bg default 
setw -g window-status-attr dim

# set colors for the active window
setw -g window-status-current-fg white 
setw -g window-status-current-bg red
setw -g window-status-current-attr bright



# pane colors
set -g pane-border-fg green
set -g pane-border-bg black
set -g pane-active-border-fg white 
set -g pane-active-border-bg yellow

# Command / message line
set -g message-fg white 
set -g message-bg black 
set -g message-attr bright

# Status line left side
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
set -g status-utf8 on

# Status line right side
# 15% | 28 Nov 18:15
set -g status-right "#(battery ) | #[fg=cyan]%d %b %R"

# Update the status bar every sixty seconds
set -g status-interval 60 

# Center the window list
#set -g status-justify centre 
# enable vi keys.
setw -g mode-keys vi

# shortcut for synchronize-panes toggle
bind C-s set-window-option synchronize-panes

#don't rename panes automatically
set-option -g allow-rename off

# copy and paste
# Setup 'v' to begin selection as in Vim 
bind-key -T copy-mode-vi v send -X  begin-selection 
bind-key -T copy-mode-vi y  send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

#bind-key -t vi-copy y copy-pipe "xclip -sel clip -i"
#bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# Update default binding of `Enter` to also use copy-pipe
#bind-key -t vi-copy Enter copy-pipe "xclip -sel clip -i"
# Log output to a text file on demand
# bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

