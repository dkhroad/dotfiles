# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi


# exec 2>>/tmp/zsh_startup.log 
# set -x

fpath+=${ZDOTDIR:-~}/.zsh/zsh_functions

# history setup
HISTFILE=$HOME/.zhistory
SAVEHIST=1000
HISTSIZE=999

setopt extended_history
setopt share_history
setopt hist_expire_dups_first
setopt hist_ignore_dups
setopt hist_ignore_all_dups
setopt hist_ignore_space
setopt hist_save_no_dups
setopt hist_verify
setopt AUTO_CD

unsetopt correct

ulimit -S -n 1024




source ~/.zsh/exports.zsh

eval "$(zoxide init zsh)"

source ~/.zsh/keybindings.zsh
source ~/.zsh/aliases.zsh
# Set up fzf key bindings and fuzzy completion


source $HOME/.bash_profile_includes/cdr.sh
#source $HOME/.bash_profile_includes/rvm.sh
# to load project specific rvm gemsets
# cd ..;1
source $HOME/.bash_profile_includes/vagrant.sh
source $HOME/.bash_profile_includes/vim.sh
# source $HOME/.bash_profile_includes/git.sh
source $HOME/.bash_profile_includes/docker.sh
source $HOME/.bash_profile_includes/go.sh
source $HOME/.bash_profile_includes/aws.sh
#source $HOME/.bash_profile_includes/rbenv.sh
source $HOME/.bash_profile_includes/code.sh
# source $HOME/.bash_profile_includes/nvm.sh
source $HOME/.bash_profile_includes/fzf.sh

# source $HOME/.bash_profile_includes/hyperledger.sh


# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/dkhroad/google-cloud-sdk/path.zsh.inc' ]; then 
  source '/Users/dkhroad/google-cloud-sdk/path.zsh.inc';
fi
# The next line enables shell command completion for gcloud.
if [ -f '/Users/dkhroad/google-cloud-sdk/completion.zsh.inc' ]; then 
  source '/Users/dkhroad/google-cloud-sdk/completion.zsh.inc';
fi


# zprof
if [[ -n "$TMUX" ]]; then
  if [[ -n "$VIRTUAL_ENV" ]]; then
    tmux set-environment VIRTUAL_ENV $VIRTUAL_ENV
  fi
fi
if [[ -n "$VIRTUAL_ENV" ]]; then
  source $VIRTUAL_ENV/bin/activate
fi

# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
if [[ -f ~/.acme.sh ]]; then
  . "/Users/dkhroad/.acme.sh/acme.sh.env"
fi


[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
source ~/.zsh/fzf.zsh
# source /home/linuxbrew/.linuxbrew/share/powerlevel10k/powerlevel10k.zsh-theme
source $(brew --prefix)/share/powerlevel10k/powerlevel10k.zsh-theme

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

source ~/.zsh/completions.zsh
autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/bin/terraform terraform

if [[ "$(uname)" == "Linux" ]] && [[ "$(lsb_release -si 2>/dev/null)" == "Ubuntu" ]]; then
    # Ubuntu-specific configuration
    source ~/.zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
    # source ~/.zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
    # bindkey '^ ' autosuggest-accept
    [[ ! -f $HOME/.cargo/env ]] || source "$HOME/.cargo/env"
elif [[ "$(uname)" == "Darwin" ]]; then
    # macOS (OSX) specific configuration
    source $(brew --prefix)/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
else
    echo "Unsupported operating system for this zsh-syntax-highlighting configuration."
fi

# set +x 
# exec 2>&1
