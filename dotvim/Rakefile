require 'pathname'

task :default do 
	puts 
	puts "$rake update:bundles"
end

desc 'Update vim plugins'
task :update => 'update:bundles'

namespace :update do
	BUNDLES = {	
    #plugins
    :ack => "git://github.com/mileszs/ack.vim.git",
    :endwise => "git://github.com/tpope/vim-endwise.git",
    :vim_rails => "git://github.com/tpope/vim-rails.git",
    :vim_fugitive => "git://github.com/tpope/vim-fugitive.git",
    :vim_rake => "git://github.com/tpope/vim-rake.git",
    :vim_bundler => "git://github.com/tpope/vim-bundler.git",
    :vim_markdown => "git://github.com/tpope/vim-markdown.git",
    :vim_ragtag => "git://github.com/tpope/vim-ragtag.git",
    :vim_surround => "git://github.com/tpope/vim-surround.git",
    :vim_git => "git://github.com/tpope/vim-git.git",
    :vim_tcomment => "git://github.com/tomtom/tcomment_vim.git",
    :vim_makegreen => "git://github.com/reinh/vim-makegreen.git",
    :snipmate_vim => "git://github.com/msanders/snipmate.vim.git",
    :vim_unimpaired => "git://github.com/tpope/vim-unimpaired.git",
    :vim_rooter => "git://github.com/airblade/vim-rooter.git",
    :vim_markdown => "git://github.com/tpope/vim-markdown.git",
    :nerdtree => "git://github.com/scrooloose/nerdtree.git" ,
    :vim_ctrlp => "git://github.com/kien/ctrlp.vim.git" ,
    :vim_easymotion => "git://github.com/Lokaltog/vim-easymotion.git",
  	:lusty => "git://github.com/sjbach/lusty.git",

    #syntax definitions

  	# color schemes
		:colors_solarized => "git://github.com/altercation/vim-colors-solarized.git",
		:colors_cobalt => "git://github.com/dterei/VimCobaltColourScheme.git"
	}

  desc "update any bundles defined in the Rakefile"
  task :bundles do

    bundle_home = Pathname.new( ENV['HOME'] ) + '.vim' + 'bundle'
    mkdir_p bundle_home

    BUNDLES.sort_by {|k,v| k.to_s }.each do |bundle, location|
      target_path = bundle_home + bundle.to_s

      puts "*" * 72
      puts "*** Instaling #{bundle} to #{target_path} from #{location}"
      puts # blank line

      rm_rf target_path

      case location.match( /^(.*?):/ )[1]
      when 'git'
        sh "git clone #{location} #{target_path} > /dev/null"
        rm_rf target_path + '.git'
      when 'http'
        mkdir_p target_path
        sh "cd #{target_path} && curl -s '#{location}' | tar zx -"
      end

      docdir = target_path + 'doc'
      if docdir.exist?
        puts "doc dir exists; tagging"
        sh "vim -u NONE -esX -c 'helptags #{docdir}' -c quit"
      end

      puts # blank line
    end
  end # task :bundles
end



